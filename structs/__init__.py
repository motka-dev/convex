from typing import List, Anyclass Point:    x: int    y: int    def __init__(self, x: int, y: int) -> None:        self.x = x        self.y = y    def __repr__(self) -> str:        return f'(X: {self.x}; Y: {self.y})'    def __eq__(self, other) -> bool:        if self.x == other.x and self.y == other.y:            return True        else:            return False    def __set__(self, instance, value) -> None:        self.x = value.x        self.y = value.yclass RingList:    _data: List = list()    def __init__(self, data: List[Any]):        for el in data:            self._data.append(el)    def __getitem__(self, position: int):        data_length = len(self._data)        if position > data_length:            position = position % data_length        return self._data[position]